SELECT
A.app,
A."date",
A.os,
A.days_since_launch,
A.installs,
B.registrations,
B.unique_registered_Users,
C.dau,
D.engagements,
D.engagers,
E.views,
E.viewers,
F.tile_views,
F.tile_viewers,
G.creations,
G.creators,
J.reposts,
J.reposters,
E.video_views,
E.video_viewers,
H.sessions,
H.session_starters,
H.time_in_msec,
I.start_count,
I.D1_Retention,
I.D2_Retention,
I.D3_Retention,
I.D4_Retention,
I.D5_Retention,
I.D6_Retention,
I.D7_Retention,
I.D8_Retention,
I.D9_Retention,
I.D10_Retention,
I.D11_Retention,
I.D12_Retention,
I.D13_Retention,
I.D14_Retention,
I.D30_Retention,
I.D60_Retention,
I.D90_Retention

FROM

(
SELECT 
A.app 
, cast(TO_CHAR(local_datetime::DATE, 'YYYY-MM-DD') as date) as date
, A.os
, datediff(day,L.launch_date,cast(TO_CHAR(local_datetime::DATE, 'YYYY-MM-DD') as date)) as days_since_launch
,COUNT(DISTINCT user_id) as installs
FROM 
(SELECT ROW_NUMBER() OVER(PARTITION BY app, os, user_id ORDER BY event_datetime) as row_num
, *
FROM install
) A
join public.launch_date L
on A.app = L.app
and A.os=L.os
and  cast(TO_CHAR(local_datetime::DATE, 'YYYY-MM-DD') as date)>=L.launch_date
WHERE row_num = 1
GROUP BY 1,2,3,4
ORDER BY 1,2,3,4
) A
FULL OUTER JOIN
(
SELECT 
app, 
cast(TO_CHAR(local_datetime::DATE, 'YYYY-MM-DD') as date) as date,
os,
COUNT(*) AS registrations,
COUNT(DISTINCT event.user_id) AS unique_registered_users 
FROM event as event

WHERE event."kingdom" LIKE 'registration'


GROUP BY 1,2,3
) B
ON A.app = B.app
AND A.date = B.date
AND A.os=B.os
FULL OUTER JOIN
(
SELECT app 
, cast(TO_CHAR(local_datetime::DATE, 'YYYY-MM-DD') as date) as date
, os
, COUNT(DISTINCT user_id) as dau 
FROM 
(SELECT ROW_NUMBER() OVER(PARTITION BY app, os, user_id, local_datetime::DATE ORDER BY event_datetime) as row_num
, *
FROM dau
) a
WHERE row_num = 1
GROUP BY 1,2,3
) C
ON A.app = C.app
AND A.date = C.date
AND A.os=C.os
LEFT JOIN
(
SELECT app, cast(TO_CHAR(local_datetime::DATE, 'YYYY-MM-DD') as date) as date,event."os",COUNT(*) AS engagements,COUNT(DISTINCT event.user_id) AS engagers 

FROM event event 

WHERE event."kingdom" LIKE 'engagement'
GROUP BY 1,2,3
) as D
ON C.app = D.app
AND C.date = D.date
AND C.os = D.os
LEFT JOIN
(
SELECT app, cast(TO_CHAR(local_datetime::DATE, 'YYYY-MM-DD') as date) as date,event."os",COUNT(*) AS views,COUNT(DISTINCT event.user_id) AS viewers, sum(case when event."class"='video' then 1 else 0 end) as video_views,
count(distinct case when event."class"='video' then user_id else null end) as video_viewers
FROM event event  

WHERE event."kingdom" LIKE 'view'
and event."phylum" LIKE 'start' 
GROUP BY 1,2,3
) as E
ON C.app = E.app
AND C.date = E.date
AND C.os = E.os
LEFT JOIN
(
SELECT app, cast(TO_CHAR(local_datetime::DATE, 'YYYY-MM-DD') as date) as date,event."os",COUNT(*) AS tile_views,COUNT(DISTINCT event.user_id) AS tile_viewers 

FROM event event  

WHERE event."kingdom" LIKE 'tile_view'
and event."phylum" LIKE 'start' 
GROUP BY 1,2,3
) as F
ON C.app = F.app
AND C.date = F.date
AND C.os = F.os
LEFT JOIN
(
SELECT app, cast(TO_CHAR(local_datetime::DATE, 'YYYY-MM-DD') as date) as date,event."os",COUNT(*) AS creations,COUNT(DISTINCT event.user_id) AS creators 

FROM event event  

WHERE event."kingdom" LIKE '%creation%'
GROUP BY 1,2,3
) as G
ON C.app = G.app
AND C.date = G.date
AND C.os = G.os
LEFT JOIN
(
SELECT 
app
,cast(TO_CHAR(local_datetime::DATE, 'YYYY-MM-DD') as date) as date
,os
,COUNT(*) AS sessions
,COUNT(DISTINCT event.user_id) AS session_starters,
SUM(float1) AS time_in_msec 
FROM event event
WHERE event."kingdom" LIKE 'session' 
AND event."phylum" LIKE 'session_end'
GROUP BY 1,2,3
) as H
ON C.app = H.app
AND C.date = H.date
AND C.os = H.os
LEFT JOIN
(
SELECT
app,
os,
cast(first_date as date) as first_date,
MAX(case when daysAfterInstall = 0 then start_count end) as start_count,
MAX(case when daysAfterInstall = 1 then return_count end) as D1_Retention,
MAX(case when daysAfterInstall = 2 then return_count end) as D2_Retention,
MAX(case when daysAfterInstall = 3 then return_count end) as D3_Retention,
MAX(case when daysAfterInstall = 4 then return_count end) as D4_Retention,
MAX(case when daysAfterInstall = 5 then return_count end) as D5_Retention,
MAX(case when daysAfterInstall = 6 then return_count end) as D6_Retention,
MAX(case when daysAfterInstall = 7 then return_count end) as D7_Retention,
MAX(case when daysAfterInstall = 8 then return_count end) as D8_Retention,
MAX(case when daysAfterInstall = 9 then return_count end) as D9_Retention,
MAX(case when daysAfterInstall = 10 then return_count end) as D10_Retention,
MAX(case when daysAfterInstall = 11 then return_count end) as D11_Retention,
MAX(case when daysAfterInstall = 12 then return_count end) as D12_Retention,
MAX(case when daysAfterInstall = 13 then return_count end) as D13_Retention,
MAX(case when daysAfterInstall = 14 then return_count end) as D14_Retention,
MAX(case when daysAfterInstall = 30 then return_count end) as D30_Retention,
MAX(case when daysAfterInstall = 60 then return_count end) as D60_Retention,
MAX(case when daysAfterInstall = 90 then return_count end) as D90_Retention

FROM

(

SELECT 
start_count.app,
start_count.os,
To_char(start_count.first_date, 'YYYY-MM-DD') AS first_date, 
       return_count.nday                             AS daysAfterInstall, 
       start_count.start_count, 
       return_count.return_count
        
FROM   

(
SELECT app, os, first_date, 
               Count(user_id) AS start_count 
        FROM   (SELECT app, os, start_count.user_id, 
                       local_datetime :: DATE AS first_date 
                FROM   (SELECT * 
                        FROM   (SELECT Row_number() 
                                         over( 
                                           PARTITION BY app,os,user_id 
                                           ORDER BY local_datetime) AS row_num, 
                                       local_datetime :: DATE       AS 
                                       first_date, 
                                       * 
                                FROM   install 
                                ) 
                               installs_with_row_num 
                        WHERE  row_num = 1 
                               ) 
                       start_count 
                WHERE  1 = 1) a 
        GROUP  BY 1,2,3
) start_count
         
left join 

(
SELECT                   r.app,
                         r.os,
                         r.first_date, 
                         r.nday, 
                         Count(r.user_id) AS return_count 
                  FROM   (SELECT starters.app,
                                 starters.os,
                                 starters.user_id, 
                                 starters.first_date, 
                                 returners.return_date, 
                                 returners.return_date - starters.first_date AS 
                                 nday 
                          FROM   (
                                 SELECT app,os,start_count.user_id, 
                                         local_datetime :: DATE AS first_date 
                                  FROM   (SELECT * 
                                          FROM   (SELECT Row_number() 
                                                           over( 
                                                             PARTITION BY 
                                                           app,os,user_id 
                                                             ORDER BY 
                                                           local_datetime) 
                                                         AS row_num, 
                                                         local_datetime :: DATE 
                                                         AS 
                                                         first_date, 
                                                         * 
                                                  FROM   install 
                                                  ) 
                                                 installs_with_row_num 
                                          WHERE  row_num = 1 
                                                 ) 
                                         start_count 
                                  WHERE  1 = 1
                                  ) starters 
                                  inner join 
                                  (
                                  SELECT DISTINCT app,os,user_id, 
                                                             local_datetime :: 
                                                             DATE AS 
                                                             return_date 
                                             FROM   dau 
                                             WHERE local_datetime :: DATE < 
                                                        Getdate() :: DATE
                                   )returners 
                                         ON starters.user_id = returners.user_id
                                         and starters.app = returners.app
                                         and starters.os=returners.os 
                                         AND returners.return_date >= starters.first_date
                            ) r 
                  GROUP  BY 1, 2,3,4
) return_count
                             
ON start_count.app = return_count.app
AND start_count.os = return_count.os
AND start_count.first_date = return_count.first_date

where start_count.app not like '%-%'
 
ORDER  BY 1,2,3,4
)
GROUP BY 1,2,3
ORDER BY 1,2,3
) as I
ON C.app = I.app
AND C.date = I.first_date
AND C.os = I.os
LEFT JOIN
(
SELECT app, cast(TO_CHAR(local_datetime::DATE, 'YYYY-MM-DD') as date) as date,event."os",COUNT(*) AS reposts,COUNT(DISTINCT event.user_id) AS reposters 

FROM event  

WHERE event."kingdom" LIKE 'engagement'
and event."phylum" LIKE 'repost'
GROUP BY 1,2,3
) as J
ON C.app = J.app
AND C.date = J.date
AND C.os = J.os
LEFT JOIN
public.launch_date l
on C.app=l.app
and C.os=l.os
where C.app not like '%-%'
and A.date>=l.launch_date
ORDER BY 1,2,3;
